-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2022-11-26 19:47:00 CET
--   site:      SQL Server 2012
--   type:      SQL Server 2012



CREATE TABLE proj_anime 
    (
     animeId INTEGER NOT NULL , 
     name VARCHAR (100) , 
     length INTEGER ,
     episodeNumber INTEGER , 
     seriesNumber INTEGER , 
     "desc" VARCHAR (500) NOT NULL , 
     shortDesc VARCHAR (100) NOT NULL , 
     created DATETIME NOT NULL , 
     updated DATETIME NOT NULL , 
     viewCount INTEGER NOT NULL , 
     language VARCHAR (5) 
    )
GO

ALTER TABLE proj_anime ADD CONSTRAINT anime_PK PRIMARY KEY CLUSTERED (animeId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE proj_anime_author 
    (
     animeId INTEGER NOT NULL , 
     authorId INTEGER NOT NULL 
    )
GO

ALTER TABLE proj_anime_author ADD CONSTRAINT Relation_79_PK PRIMARY KEY CLUSTERED (animeId, authorId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE proj_author 
    (
     authorId INTEGER NOT NULL , 
     firstName VARCHAR (50) , 
     lastName VARCHAR (50) , 
     authorName VARCHAR (30) , 
     birthDate DATE , 
     bibliography VARCHAR (500) NOT NULL , 
     photoUrl VARCHAR (100) , 
     type VARCHAR (10) NOT NULL , 
     created DATETIME NOT NULL , 
     updated DATETIME NOT NULL , 
     prefferedStyle VARCHAR (50) 
    )
GO

ALTER TABLE proj_author ADD CONSTRAINT author_PK PRIMARY KEY CLUSTERED (authorId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE proj_comment 
    (
     commentId INTEGER NOT NULL , 
     animeId INTEGER NOT NULL , 
     userId INTEGER NOT NULL , 
     text VARCHAR (3000) NOT NULL , 
     rating INTEGER , 
     hiddenBy INTEGER , 
     created DATETIME NOT NULL , 
     updated DATETIME NOT NULL , 
     inReplyTo INTEGER 
    )
GO

ALTER TABLE proj_comment ADD CONSTRAINT comment_PK PRIMARY KEY CLUSTERED (commentId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE proj_like 
    (
     likeId INTEGER NOT NULL , 
     animeId INTEGER NOT NULL , 
     userId INTEGER NOT NULL , 
     active BIT NOT NULL , 
     created DATETIME NOT NULL , 
     updated DATETIME NOT NULL 
    )
GO

ALTER TABLE proj_like ADD CONSTRAINT like_PK PRIMARY KEY CLUSTERED (likeId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE proj_request 
    (
     requestId INTEGER NOT NULL , 
     assignedUserId INTEGER , 
     userId INTEGER NOT NULL , 
     text VARCHAR (500) NOT NULL , 
     created DATETIME NOT NULL , 
     updated DATETIME NOT NULL 
    )
GO

ALTER TABLE proj_request ADD CONSTRAINT request_PK PRIMARY KEY CLUSTERED (requestId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE proj_source 
    (
     sourceId INTEGER NOT NULL , 
     animeId INTEGER NOT NULL , 
     name VARCHAR (100) NOT NULL , 
     url VARCHAR (250) NOT NULL , 
     addDate DATETIME NOT NULL , 
     lastVerifyDate DATETIME NOT NULL , 
     quality VARCHAR (15) NOT NULL , 
     created DATETIME NOT NULL , 
     updated DATETIME NOT NULL , 
     "external" BIT NOT NULL , 
     paymentRequired BIT NOT NULL , 
     language VARCHAR (5) , 
     subtitles VARCHAR (50) 
    )
GO

ALTER TABLE proj_source ADD CONSTRAINT source_PK PRIMARY KEY CLUSTERED (sourceId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE proj_user 
    (
     userId INTEGER NOT NULL , 
     firstName VARCHAR (50) NOT NULL , 
     lastName VARCHAR (50) , 
     email VARCHAR (62) NOT NULL , 
     password VARCHAR (256) NOT NULL , 
     address VARCHAR (100) , 
     city VARCHAR (50) , 
     photoUrl VARCHAR (255), 
     language VARCHAR (5) NOT NULL , 
     role INTEGER NOT NULL , 
     paid BIT NOT NULL , 
     registeredDate DATETIME NOT NULL , 
     updated DATETIME NOT NULL , 
     lastLogin DATETIME NOT NULL , 
     emailNotifications BIT NOT NULL , 
     emailMarketing BIT NOT NULL , 
     prefferedStyle VARCHAR (50) 
    )
GO

ALTER TABLE proj_user ADD CONSTRAINT user_PK PRIMARY KEY CLUSTERED (userId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE proj_view
    (
     viewId INTEGER NOT NULL , 
     animeId INTEGER NOT NULL , 
     userId INTEGER NOT NULL , 
     created DATETIME NOT NULL , 
     startTime INTEGER , 
     endTime INTEGER 
    )
GO

ALTER TABLE proj_view ADD CONSTRAINT view_PK PRIMARY KEY CLUSTERED (viewId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

ALTER TABLE proj_comment 
    ADD CONSTRAINT comment_anime_FK FOREIGN KEY 
    ( 
     animeId
    ) 
    REFERENCES proj_anime 
    ( 
     animeId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE proj_comment 
    ADD CONSTRAINT comment_comment_FK FOREIGN KEY 
    ( 
     inReplyTo
    ) 
    REFERENCES proj_comment 
    ( 
     commentId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE proj_comment 
    ADD CONSTRAINT comment_user_FK FOREIGN KEY 
    ( 
     userId
    ) 
    REFERENCES proj_user
    ( 
     userId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE proj_like
    ADD CONSTRAINT like_anime_FK FOREIGN KEY 
    ( 
     animeId
    ) 
    REFERENCES proj_anime 
    ( 
     animeId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE proj_like
    ADD CONSTRAINT like_user_FK FOREIGN KEY 
    ( 
     userId
    ) 
    REFERENCES proj_user
    ( 
     userId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE proj_anime_author 
    ADD CONSTRAINT Relation_79_anime_FK FOREIGN KEY 
    ( 
     animeId
    ) 
    REFERENCES proj_anime 
    ( 
     animeId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE proj_anime_author 
    ADD CONSTRAINT Relation_79_author_FK FOREIGN KEY 
    ( 
     authorId
    ) 
    REFERENCES proj_author 
    ( 
     authorId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE proj_request 
    ADD CONSTRAINT request_user_FK FOREIGN KEY 
    ( 
     userId
    ) 
    REFERENCES proj_user
    ( 
     userId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE proj_request 
    ADD CONSTRAINT request_user_FKv1 FOREIGN KEY 
    ( 
     assignedUserId
    ) 
    REFERENCES proj_user
    ( 
     userId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE proj_source 
    ADD CONSTRAINT source_anime_FK FOREIGN KEY 
    ( 
     animeId
    ) 
    REFERENCES proj_anime 
    ( 
     animeId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE proj_view
    ADD CONSTRAINT view_anime_FK FOREIGN KEY 
    ( 
     animeId
    ) 
    REFERENCES proj_anime 
    ( 
     animeId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE proj_view 
    ADD CONSTRAINT view_user_FK FOREIGN KEY 
    ( 
     userId
    ) 
    REFERENCES proj_user 
    ( 
     userId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO